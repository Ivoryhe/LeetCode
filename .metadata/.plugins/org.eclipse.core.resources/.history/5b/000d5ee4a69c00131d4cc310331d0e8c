public class Solution {
    public void flatten(TreeNode root) {
        if(root == null || (root.left == null && root.right == null)){
            return;
        }
        
        Stack<TreeNode> stack = new Stack<TreeNode>();
        TreeNode point = root;
        while(point != null || !stack.empty()){
            while(point != null){
                stack.push(point);
                point = point.left;
            }
            
            if(!stack.empty()){
                TreeNode node = stack.pop();
                TreeNode temp = node.right;
                if(temp != null){
                    point = temp;
                }
                if(node.left != null){
                    node.right = node.left;
                    node.left =  null;
                    TreeNode right = node.right;
                    while(right != null){
                        right = right.right;
                    }
                    right = temp;
                }
            }
        }
    }
}