import java.util.ArrayList;

public class Solution {
    public static ArrayList<ArrayList<Integer>> pathSum(TreeNode root, int sum) {
    	System.out.println("HELLO:");
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        if(root == null || sum == 0) {return result;}
        ArrayList<Integer> list = new ArrayList<Integer>();
        helper(root, sum, list, result);
        return result;
    }
    
    public static void helper(TreeNode root, int sum, ArrayList<Integer> list, ArrayList<ArrayList<Integer>> result){
        System.out.println("sum: " + sum);
        if(root == null){
            return;
        }

        list.add(root.val);
        
        if(sum - root.val == 0 && root.left == null && root.right == null){
            ArrayList<Integer> l = new ArrayList<Integer>(list);
            result.add(l);
            return;
        }
        
        if(root.left != null){
            helper(root.left,sum-root.val,list,result);
            list.remove(list.size()-1);
        }
        if(root.right != null){
            helper(root.right,sum-root.val,list,result);
            list.remove(list.size()-1);
        }
        
    }
    
    public static void main(String[] args){
    	TreeNode root = new TreeNode(7);
    	TreeNode a = new TreeNode(0);
    	root.left = a;
    	TreeNode b = new TreeNode(-1);
    	TreeNode c = new TreeNode(-6);
    	a.left = b;
    	a.right = c;
    	TreeNode d = new TreeNode(1);
    	b.right = d;
    	TreeNode e = new TreeNode(-7);
    	d.left = e;
    	pathSum(root, 0);
    }
}