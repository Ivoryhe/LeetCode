import java.util.ArrayList;

/**
 * Feb-15-2014
 * @author Ivoryhe
 * Binary Tree Level Order Traversal 
 * 
 */
public class Solution {
    public ArrayList<ArrayList<Integer>> levelOrder(TreeNode root) {
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        if(root == null) {return result;}
        
        ArrayList<Integer> list = new ArrayList<Integer>();
        LinkedList<TreeNode> q1 = new LinkedList<TreeNode>();
        LinkedList<TreeNode> q2 = new LinkedList<TreeNode>();
        q1.add(root);
        
        while(q1.size() != 0){
            TreeNode node = q1.removeFirst();
            list.add(node.val);
            
            if(node.left != null){
                q2.add(node.left);
            }
            
            if(node.right != null){
                q2.add(node.right);
            }
            
            if(q1.size() == 0){
                ArrayList<Integer> l = new ArrayList<Integer>(list);
                result.add(l);
                list.clear();
                q1 = q2;
                q2 = new LinkedList<TreeNode>();
            }
        }
        return result;
    }
}